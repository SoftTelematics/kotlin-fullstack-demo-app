/*
 * This file is generated by jOOQ.
 */
package my.mpp.jooq.tables.records;


import javax.annotation.Generated;

import my.mpp.jooq.tables.JOrders;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JOrdersRecord extends UpdatableRecordImpl<JOrdersRecord> implements Record5<Integer, String, Integer, String, String> {

    private static final long serialVersionUID = -315989005;

    /**
     * Setter for <code>public.orders.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.orders.product</code>.
     */
    public void setProduct(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders.product</code>.
     */
    public String getProduct() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.orders.sum</code>.
     */
    public void setSum(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orders.sum</code>.
     */
    public Integer getSum() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.orders.comment</code>.
     */
    public void setComment(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orders.comment</code>.
     */
    public String getComment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.orders.customer</code>.
     */
    public void setCustomer(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orders.customer</code>.
     */
    public String getCustomer() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return JOrders.ORDERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return JOrders.ORDERS.PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return JOrders.ORDERS.SUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return JOrders.ORDERS.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return JOrders.ORDERS.CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getProduct();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord value2(String value) {
        setProduct(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord value3(Integer value) {
        setSum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord value4(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord value5(String value) {
        setCustomer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JOrdersRecord values(Integer value1, String value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JOrdersRecord
     */
    public JOrdersRecord() {
        super(JOrders.ORDERS);
    }

    /**
     * Create a detached, initialised JOrdersRecord
     */
    public JOrdersRecord(Integer id, String product, Integer sum, String comment, String customer) {
        super(JOrders.ORDERS);

        set(0, id);
        set(1, product);
        set(2, sum);
        set(3, comment);
        set(4, customer);
    }
}
